#version 150 core

layout (points) in;
layout (triangle_strip, max_vertices=4) out;

in VertexData {
    float radius;
    vec4 color;
} VertexIn[];

out VertexData {
    vec4 color;
    vec2 uv;
} VertexOut;

uniform Locals {
    mat4 u_Transformation;
};

void main()
{
    float circleRadius = VertexIn[0].radius;
    gl_Position = gl_in[0].gl_Position + u_Transformation * vec4(-circleRadius, -circleRadius, 0, 0);
    VertexOut.color = VertexIn[0].color;
    VertexOut.uv = vec2(-1, -1);
    EmitVertex();

    gl_Position = gl_in[0].gl_Position + u_Transformation * vec4(circleRadius, -circleRadius, 0, 0);
    VertexOut.color = VertexIn[0].color;
    VertexOut.uv = vec2(1, -1);
    EmitVertex();

    gl_Position = gl_in[0].gl_Position + u_Transformation * vec4(-circleRadius, circleRadius, 0, 0);
    VertexOut.color = VertexIn[0].color;
    VertexOut.uv = vec2(-1, 1);
    EmitVertex();

    gl_Position = gl_in[0].gl_Position + u_Transformation * vec4(circleRadius, circleRadius, 0, 0);
    VertexOut.color = VertexIn[0].color;
    VertexOut.uv = vec2(1, 1);
    EmitVertex();
}
